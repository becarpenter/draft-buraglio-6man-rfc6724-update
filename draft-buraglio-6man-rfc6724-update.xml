<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.33 (Ruby 2.6.10) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

<!ENTITY RFC2119 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY I-D.ietf-core-coap SYSTEM "https://bib.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-core-coap.xml">
]>


<rfc docName="draft-buraglio-6man-rfc6724-update" category="std" consensus="true">
  <front>
    <title>Updates to host address source selection</title>

    <author initials="B." surname="Carpenter" fullname="Brian Carpenter">
      <organization>Univ. of Auckland</organization>
      <address>
        <email>brian.e.carpenter@gmail.com</email>
      </address>
    </author>

    <date year="2023" month="May" day="05"/>

    
    
    

    <abstract>


<?line 43?>

<t>The behavior of ULA addressing as defined by <eref target="RFC6724"></eref> is preferred below legacy IPv4 addressing, thus rendering ULA IPv6 deployment functionally unusable in IPv4 / IPv6 dual-stacked environments. This behavior is counter to the operational behavior of GUA IPv6 addressing on nearly all modern operating systems that leverage a preference model based on <eref target="RFC6724"></eref>.
This document outlines buth the operational implications of section section 10.6 of <eref target="RFC6724"></eref> as described in <eref target="draft-ietf-v6ops-ula"></eref> and updates the process to better suit operational deployment and management of Unique Local Addressing (ULA) in production.</t>



    </abstract>



  </front>

  <middle>


<?line 48?>

<section anchor="introduction"><name>Introduction</name>

<t>In modern IPv4 / IPv6 dual-stacked environments, ULA addressing and GUA IPv6 addressing exhibit opposite behavior, which creates difficulties in deployments
leveraging ULA addressing. This conflicting behavior carries planning, operational, and security implications for environments requiring ULA addressing with IPv4/IPv6 dual-stack and prioritization of IPv6 traffic by default, as is the behavior with IPv6 GUA addressing.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="defining-well-known-unintended-operational-issues-with-ula"><name>Defining Well Known Unintended Operational Issues With ULA</name>

<t>The <eref target="RFC6724"></eref> definition is incomplete for ULA precedence if a host is operating in a dual-stack environment.
As written, <eref target="RFC6724"></eref> section 10.3 states:</t>

<figure><artwork><![CDATA[
"The default policy table gives IPv6 addresses higher precedence than
IPv4 addresses.  This means that applications will use IPv6 in
preference to IPv4 when the two are equally suitable.  An
administrator can change the policy table to prefer IPv4 addresses by
giving the ::ffff:0.0.0.0/96 prefix a higher precedence".
]]></artwork></figure>

<t>Expected behavior would be that ULA address space would be preferred over legacy IPv4, however this is not the case. This presents an acute issue with any environment that will use ULA addressing long side legacy IPv4 that is counter to the standard expectations for legacy IPv4 / IPv6 dual-stack behavior of preferring IPv6, as is performed with GUA addressing.
Further, <eref target="RFC6724"></eref> Section 10.6 states that this is resolvable by adding a site-specific policy to cause ULAs
within a site to be preferred over global addresses. While theoretically possible, this presents significant issues on devices with inaccessable configuration files as detailed below.</t>

<section anchor="operational-implications"><name>Operational Implications</name>

<t>There are demonstrated and easily repeatable uses cases of ULA not being preferred in some OS and network equipment over legacy IPv4 that necessitate the immediate update to <eref target="RFC6724"></eref>
to better reflect the original intent of the RFC. As with most adjustments to standards, and using <eref target="RFC6724"></eref>
itself as a measurement, this update will likely take between 8-20 years to become common enough for relatively consistent behavior within operating systems. As a reference, as of the time of this writing, it has been 10 years since <eref target="RFC6724"></eref>
has been published but we continue to see existing commercial and open source operating systems exhibiting <eref target="RFC3484"></eref>
behavior. While it should be noted that <eref target="RFC6724"></eref> defines a solution that is functional academically, operationally the solution of adjusting the address preference selection table
is both operating system dependent and unable to be signaled by any network mechanism such as within a router advertisement, DHCPv6 option, or the like. This lack of an
intra-protocol or network-based ability to adjust address selection preference, along with the inability to adjust a notable number of operating systems either programmatically or manually
renders operational scalability of such a mechanism functionally untenable.<br />
It is anticipated that any update of <eref target="RFC6724"></eref> would require an additional 8-20 years to be fully realized and properly implemented in a majority of network connected systems. In addition, in the current versions of Linux,
the priority table (gai.conf) still makes reference to <eref target="RFC3484"></eref>, further demonstrating the long timeframe to have updates reflected in a current, modern operating system. Examples of such out-of-date behavior can be found in printers, cameras, fixed devices, IoT sensors, and longer lifecycle equipment.
It is especially important to note this behavior in the long lifecycle equipment that exists in industrial control and operational technology environments due to their very long mean time to replacement.
The core issue is the stated interpretation from gai.conf that has the following default:</t>

<figure><artwork><![CDATA[
#scopev4  <mask> <value> 
#  Add another rule to the RFC 6724 scope table for IPv4 addresses. 
#    By default the scope IDs described in section 3.2 in RFC 6724 are
#    used.  Changing these defaults should hardly ever be necessary.
#    The defaults are equivalent to:
#
#scopev4 ::ffff:169.254.0.0/112  2
#scopev4 ::ffff:127.0.0.0/104    2
#scopev4 ::ffff:0.0.0.0/96       14
]]></artwork></figure>

<t title="gai.conf example" alt="gai.conf" anchor="scope4">Notice that they are interpreting the legacy IPv4 address range as "scopev4" and the prefix ::ffff:0.0.0.0/96 which has a higher precedence (35) in <eref target="RFC6724"></eref> then the ULA prefix of fc00::/7 (3). This results in legacy IPv4 being preferred over IPv6 ULA. While not inherently undesirable, the operational outcome when utilizing dual-stack with ULA is inconsistent and imparts unnecessary difficulty for both troubleshooting and creating the requisite baseline of expected behavior which are both requirements for supportable production deployments. This results in operational and engineering teams not gaining IPv6 experience as limited traffic is actually using IPv6, and security baseline expectations can, depending on the host implementation, be inconsistent at best and haphazard at worst.</t>

<t>In practice, <eref target="RFC6724"></eref> imposes several operational shortcomings preventing both consistent and desired behavior. If we define "desired behavior" as IPv6 preference over legacy IPv4 for address and protocol selection, then the resulting implemented behavior, based on <eref target="RFC6724"></eref>, will fall short of that intent. Based on the current verbiage, dual-stacked hosts configured with both a legacy IPv4 address and an IPv6 ULA address, the resulting behavior will manifest as a host choosing IPv4 over ULA IPv6. This behavior deviates from the current goal of a host with legacy IPv4 address and also with an IPv6 GUA address preferring IPv6 over IPv4. Operationally and strategically, this manifests as an impediment to deployment of IPv6 for many non service provider and mobile networks phasing in dual-stacked (both legacy IPv4 and IPv6) networking with the expectation of consistent behavior (i.e. always use IPv6 before legacy IPv4).</t>

<t>Other operational considerations are the use of the policy table detailed in section 2.1 of <eref target="RFC6724"></eref>. While conceptually the intent was for a configurable, longest-match table to be adjusted as-needed. In practice, modifying the prefix policy table remains difficult across platforms, and in some cases impossible. Embedded, proprietary, closed source, and IoT devices are especially difficult to adjust, and are in many cases incapable of any adjustment whatsoever. Large scale manipulation of the policy table also remains out of the realm of realistic support for small and medium scale operators due to lack of ability to manipulate all the hosts and systems, or a lack of tooling and access.</t>

<t>Below is an example of a gai.conf file from a modern Linux installation as of 03 April 2022:</t>

<figure><artwork><![CDATA[
# Configuration for getaddrinfo(3).
#
# So far only configuration for the destination address sorting is needed.
# RFC 3484 governs the sorting.  But the RFC also says that system
# administrators should be able to overwrite the defaults.  This can be
# achieved here.
#
# All lines have an initial identifier specifying the option followed by
# up to two values.  Information specified in this file replaces the
# default information.  Complete absence of data of one kind causes the
# appropriate default information to be used.  The supported commands include:
#
# reload  <yes|no>
#    If set to yes, each getaddrinfo(3) call will check whether this file
#    changed and if necessary reload.  This option should not really be
#    used.  There are possible runtime problems.  The default is no.
#
# label   <mask>   <value>
#    Add another rule to the RFC 3484 label table.  See section 2.1 in
#    RFC 3484.  The default is:
#
#label ::1/128       0
#label ::/0          1
#label 2002::/16     2
#label ::/96         3
#label ::ffff:0:0/96 4
#label fec0::/10     5
#label fc00::/7      6
#label 2001:0::/32   7
#
#    This default differs from the tables given in RFC 3484 by handling
#    (now obsolete) site-local IPv6 addresses and Unique Local Addresses.
#    The reason for this difference is that these addresses are never
#    NATed while IPv4 site-local addresses most probably are.  Given
#    the precedence of IPv6 over IPv4 (see below) on machines having only
#    site-local IPv4 and IPv6 addresses a lookup for a global address would
#    see the IPv6 be preferred.  The result is a long delay because the
#    site-local IPv6 addresses cannot be used while the IPv4 address is
#    (at least for the foreseeable future) NATed.  We also treat Teredo
#    tunnels special.
#
# precedence  <mask>   <value>
#    Add another rule to the RFC 3484 precedence table.  See section 2.1
#    and 10.3 in RFC 3484.  The default is:
#
#precedence  ::1/128       50
#precedence  ::/0          40
#precedence  2002::/16     30
#precedence ::/96          20
#precedence ::ffff:0:0/96  10
#
#    For sites which prefer IPv4 connections change the last line to
#
#precedence ::ffff:0:0/96  100

#
# scopev4  <mask>  <value>
#    Add another rule to the RFC 6724 scope table for IPv4 addresses.
#    By default the scope IDs described in section 3.2 in RFC 6724 are
#    used.  Changing these defaults should hardly ever be necessary.
#    The defaults are equivalent to:
#
#scopev4 ::ffff:169.254.0.0/112  2
#scopev4 ::ffff:127.0.0.0/104    2
#scopev4 ::ffff:0.0.0.0/96       14
]]></artwork></figure>

<t>Several assumptions are made here and are largely based on interpretations of <eref target="RFC6724"></eref>
but are not operationally relevant in modern networks. As this file or an equivalent structure within a given operating system is referenced, it dictates the
behavior of the getaddrinfo() or analogous process. More specifically, where getaddrinfo() or comparable API is used, the sorting behavior should take into account both
the source address of the requesting host as well as the destination addresses returned and sort according to both source and destination addressing, i.e, when a ULA address is
returned, the source address selection should return and use a ULA address if available. Similarly, if a GUA address is returned the source address selection should return
a GUA source address if available.</t>

<t>Here are some example failure modes:</t>

<t><list style="symbols">
  <t>ULA per <eref target="RFC6724"></eref> is less preferred (the Precedence value is lower) than all legacy IPv4 (represented by ::ffff:0:0/96 in the aforementioned table).</t>
  <t>Because of the lower Precedence value of fc00::/7, if a host has legacy IPv4 enabled, it will use legacy IPv4 before using ULA.</t>
  <t>A dual-stacked client will source the traffic from the legacy IPv4 address, meaning it will require a corresponding legacy IPv4 destination address.</t>
</list></t>

<t>Per number 3, even a host choosing a destination with A and AAAA DNS records, the host in question will choose the A record to get an legacy IPv4 address for the destination, meaning ULA IPv6 is rendered completely unused. It is also notable that Happy Eyeballs <eref target="RFC8305"></eref> will not change the source address selection process on a host. Happy Eyeballs will only modify the destination sorting process.</t>

<t>As a direct result of the described failure modes, and in addition to the aforementioned operational implications, use of ULA is not a viable option for dual-stack networking transition planning, large scale network modeling, network lab environments or other modes of emulating a large scale networking that runs both IPv4 and IPv6 concurrently with the expectation that IPv6 will be preferred by default.</t>

</section>
</section>
<section anchor="adjustments-to-rfc6724"><name>Adjustments to RFC6724</name>

<t>Rule 2.1 of <eref target="RFC6724"></eref> states:</t>

<figure><artwork><![CDATA[
IPv6 implementations SHOULD support configurable address selection
via a mechanism at least as powerful as the policy tables defined
here.  It is important that implementations provide a way to change
the default policies as more experience is gained.  Sections 10.3
through 10.7 provide examples of the kind of changes that might be
needed.
]]></artwork></figure>

<t>This document updates <eref target="RFC6724"></eref> section 2.1 to the following:</t>

<figure><artwork><![CDATA[
IPv6 implementations MUST support configurable address selection
via a mechanism at least as powerful as the policy tables defined
here.  It is important that implementations provide a way to change
the default policies to ensure operational supportability and flexibility in deployment.
Sections 10.3 through 10.7 provide examples of the kind of changes that might be
needed.
]]></artwork></figure>

<t>Rule 2.1 of <eref target="RFC6724"></eref> further states:</t>

<figure><artwork><![CDATA[
If an implementation is not configurable or has not been configured,
   then it SHOULD operate according to the algorithms specified here in
   conjunction with the following default policy table:


      Prefix        Precedence Label
      ::1/128               50     0
      ::/0                  40     1
      ::ffff:0:0/96         35     4
      2002::/16             30     2
      2001::/32              5     5
      fc00::/7               3    13
      ::/96                  1     3
      fec0::/10              1    11
      3ffe::/16              1    12
]]></artwork></figure>

<t>This document updates <eref target="RFC6724"></eref> section 2.1 to the following:</t>

<section anchor="needs-labels-adjusted"><name>needs labels adjusted</name>
<figure><artwork><![CDATA[
If an implementation is not configurable or has not been configured,
   then it SHOULD operate according to the algorithms specified here in
   conjunction with the following default policy table:


      Prefix        Precedence Label
      ::1/128               50     0
      ::/0                  40     1
      fc00::/7              35    13
      ::ffff:0:0/96         30     4
      2001::/32              5     5
      2002::/16              1     2
      ::/96                  1     3
      fec0::/10              1    11
      3ffe::/16              1    12
]]></artwork></figure>

<t>This preference table update moves 2002::/16 to de-preference status in line with <eref target="RFC7526"></eref> and changes the default address selection to move fc00::/7 above legacy IPv4, changing ::ffff:0:0/96 to preference 30.</t>

<t>Rule 5.5 of <eref target="RFC6724"></eref> states:</t>

<figure><artwork><![CDATA[
Rule 5.5: Prefer addresses in a prefix advertised by the next-hop.
If SA or SA's prefix is assigned by the selected next-hop that will
be used to send to D and SB or SB's prefix is assigned by a different
next-hop, then prefer SA.  Similarly, if SB or SB's prefix is
assigned by the next-hop that will be used to send to D and SA or
SA's prefix is assigned by a different next-hop, then prefer SB.
Discussion: An IPv6 implementation is not required to remember
which next-hops advertised which prefixes.  The conceptual models
of IPv6 hosts in Section 5 of [](RFC4861) and Section 3 of [](RFC4191)
have no such requirement.  Hence, Rule 5.5 is only applicable to
implementations that track this information.
]]></artwork></figure>

<t>This document updates <eref target="RFC6724"></eref> section 5.5 to the following:</t>

</section>
<section anchor="needs-eyes"><name>needs eyes</name>

<figure><artwork><![CDATA[
Rule 5.5: Hosts MUST prefer addresses in a prefix advertised by the next-hop.
If SA or SA's prefix is assigned by the selected next-hop that will
be used to send to D and SB or SB's prefix is assigned by a different
next-hop, then prefer SA.  Similarly, if SB or SB's prefix is
assigned by the next-hop that will be used to send to D and SA or
SA's prefix is assigned by a different next-hop, then prefer SB.
Discussion: An IPv6 implementation is not required to remember
which next-hops advertised which prefixes.  The conceptual models
of IPv6 hosts in Section 5 of [](RFC4861) and Section 3 of [](RFC4191)
have no such requirement.  Hence, Rule 5.5 is only applicable to
implementations that track this information.
]]></artwork></figure>

</section>
</section>
<section anchor="smoldering-ideas"><name>Smoldering ideas</name>

<t>fixes without a global precedence for ULAs:
set PIO with L=0 and A=0 (exactly as recommended in RFC 8028, but for other reasons). If a host sees such a PIO for a ULA prefix, it could serve as a signal that the prefix is to be given a suitable precedence, even though it is not on-link and not used for SLAAC.</t>

<t>Insert the /48 for any directly connected /64, utilize some RIO/PIO L=0/A=0 extension that adds additional non-direct /48.</t>

</section>
<section anchor="refstyle"><name>References</name>

<t>The IETF documents referred to here are <eref target="RFC2119"></eref> and <eref target="I-D.ietf-core-coap"></eref>.  We also refer to <eref target="REST">REST</eref>.  <eref target="a-rose"></eref> and <eref target="exampleTable"></eref> are explicitly tagged, as is <eref target="refstyle"></eref>, but <eref target="security-considerations"></eref> is implicit.  The web page at <eref target="http://ipv.sx/">ipv.sx</eref> is not part of this document.</t>

</section>
<section anchor="security-considerations"><name>Security Considerations</name>

<t>None.</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<t>None.</t>

</section>
<section anchor="appendix-a-acknowledgements"><name>Appendix A. Acknowledgements</name>
<t>The authors would like to acknowledge the valuable input and contributions of David Farmer, Bob Hinton, Ed Horley, Tom Coffeen, Scott Hogg, and Chris Cummings.</t>

</section>
<section anchor="appendix-b-changes-since-rfc6724"><name>Appendix B. Changes since RFC6724</name>

<t>*Update to default preference table moving 6to4 address block 2002::/16 to de-preference status in line with <eref target="RFC7526"></eref> 
*Change the default address selection to move fc00::/7 to preference 35, above legacy IPv4,<br />
*Change ::ffff:0:0/96 to preference 30. \
*Change section 5.5 Prefer addresses in a prefix advertised by the next-hop to a MUST</t>

</section>


  </middle>

  <back>


    <references title='Normative References'>

&RFC2119;
&I-D.ietf-core-coap;


    </references>

    <references title='Informative References'>

<reference anchor="REST" >
  <front>
    
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>


    </references>



  </back>

<!-- ##markdown-source:
H4sIAC1CVWQAA+1cWXMbR5J+719RIT2s6ADAU5TMGDsMHR5xViMpTCr8sDsP
he4CUFYfmK5ukvDs7G/fLzOrqqsByNZ4Z2NjN0xHWAS6jqy8v8xqTqfTrLNd
aa7Ux02hO+NU16h14zqli6I1zinX9G1ulDOlyTvb1FnR5LWuMKNo9bKbLvpW
r0rbTC8rXU/bZX757Oxi2vNqWa67K+W6Ist0362b9ipT/DP1/ypla3el3s3U
C79MfCB7vLP5p/1nTbu6Uq9r06626ia3ps5B+DvT3TftpzjIVNqWVyrQ992y
ae91W9h6tSl1bWa16X6FrNuZerlu7usdmm5ttfM90/On65uXu5tj6IyHfveT
dflM57P+069s+gKb6nZj6s60Oxu/aK2uDzzl7T/W9m6mmqWa9/knHLDYYwTN
nplZHuZ/t6IHs7ypsqxu2kp39s4QVT98//Ls9PRr+vV6+mpmTbec5k1r8D+9
ucoyWy9Hw1/f3MphRJX41/EZ5Wzj44zI5w+kMlh+Op2quumMeos9K3W9cT0o
5K/1wnWtziG427VRC7PWd7Zp6dQf386DykLCSjtVmKWtTaEWW/Vvf3mCM5Fi
Hinr1KY1S9O29MyUzb0qzUrnW3X94e4iWWOiunXvVGvqwrS0Jm2BMZdYeVM2
2wpMVMu+ZqvQZblVfd07vSgNDiuLHfvxvS6nrtP5J2xp6jvbNjXNdjN1uwY9
8Rz4PW96kg2ZYYcjNhvTatlgdNw/fvS0JGdualUb3YIQUKOqBmTXYQE8dlvX
mQoGvtYdjnyH71dGac8NsiGeg320A51YLWHbLGNKYfs9n7vpuxLcBe2Q8x6l
ttqUNudPjqh14jriv6cns0v6PpULS8zlrV1gc8ubi4Nh9bu7bDZu2pcaA+tC
9cFZYeNN2+TkqMCxhemId6633YieRGA0G44KR5dzLMlw/tqTsuUYOR/Y+QTy
PiJKsEHRM+Ez0cLKFkVpsuy67uKj7Jvkhx4FAXyRIkz29BdkHpKxeVjbBZ9u
0zjbDTYwUfdrm69V3hrmTGGXS5v3ZWfxAYcYWOAyL/yg08PyXh/zpl5Cfqw1
UengNlpai5xnzeaRcHjCBEO8fWu77Vj+8BWjs8Ki/trbdn93dW+hS8Sv4x1u
8eqbFmTYzv7M65LkeBT8AZ2UzBwWr3HiCemSFeWI5Ie1L5mtyZFZpOEnyx6r
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
TPOK35hLs/Q5r5C/G7GAKmT/BfLGxNVzRwAA

-->

</rfc>

