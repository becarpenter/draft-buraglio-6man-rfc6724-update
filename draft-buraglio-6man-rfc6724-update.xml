<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.33 (Ruby 2.6.10) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

<!ENTITY RFC2119 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC4193 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.4193.xml">
<!ENTITY RFC4861 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.4861.xml">
<!ENTITY RFC4191 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.4191.xml">
<!ENTITY RFC7078 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.7078.xml">
<!ENTITY RFC7526 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.7526.xml">
<!ENTITY RFC8174 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml">
<!ENTITY RFC6724 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.6724.xml">
<!ENTITY RFC1918 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.1918.xml">
<!ENTITY RFC3484 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.3484.xml">
]>


<rfc ipr="trust200902" docName="draft-buraglio-6man-rfc6724-update" category="std" consensus="true" updates="6724">
  <front>
    <title>Preference for ULAs over RFC1918 addresses in RFC6724</title>

    <author initials="N." surname="Buraglio" fullname="Nick Buraglio">
      <organization>Energy Sciences Network</organization>
      <address>
        <email>buraglio@forwardingplane.net</email>
      </address>
    </author>
    <author initials="T." surname="Chown" fullname="Tim Chown">
      <organization>Jisc</organization>
      <address>
        <email>Tim.Chown@jisc.ac.uk</email>
      </address>
    </author>
    <author initials="J." surname="Duncan" fullname="Jeremy Duncan">
      <organization>Tachyon Dynamics</organization>
      <address>
        <email>jduncan@tachyondynamics.com</email>
      </address>
    </author>

    <date year="2023" month="June" day="28"/>

    <area>Int</area>
    <workgroup>6MAN</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<?line 43?>

<t>This document updates RFC 6724 based on operational experience gained since its publication over ten years ago. In particular it updates the preference of Unique Local Addresses (ULAs) in the default address selection policy table, which as originally defined by RFC 6724 has lower precedence than legacy IPv4 addressing. The update places both IPv6 Global Unicast Addresses (GUAs) and ULAs ahead of all IPv4 addresses on the policy table to better suit operational deployment and management of ULAs in production. This document also updates requirements on configurability of the policy table and preference for using ddresses from a prefix advertised by a next-hop router, and demotes the preference for 6to4 addresses in the default policy table. These changes to default behavior improve supportability of common use cases such as, but not limited to, automatic / unmanaged scenarios. It is recognized that some less common deployment situations may require explicit confioguration or custom changes to acheive desired operational parameters.</t>



    </abstract>



  </front>

  <middle>


<?line 47?>

<section anchor="introduction"><name>Introduction</name>

<t>When <xref target="RFC6724"/> was published in 2012 it was expected that the default policy table may need to be updated from operational experience; section 2.1 says "It is important that implementations provide a way to change the default policies as more experience is gained" and points to the examples in Section 10, including Section 10.6 which considers a ULA example.</t>

<t>This document is written on the basis of operational experience, in particular for scenarios where ULAs are used within a site. The current default policy table in RFC 6724 leads to preference for IPv6 GUAs over IPv4 globals, which is widely considered to be preferential behaviour to support greater use of IPv6 in dual-stack environments, and to allow sites to phase out IPv4 as its use becomes ever lower.</t>

<t>However, the  default policy table also puts IPv6 ULAs below all IPv4 addresses, including <xref target="RFC1918"/> addresses. For many site operators this behavior will be counter-intuitive, and may create difficulties with respect to planning, operational, and security implications for environments where ULA addressing is used in certain IPv4/IPv6 dual-stack network scenarios. The expected prioritization of IPv6 traffic over IPv4 by default, as happens with IPv6 GUA addressing, will not happen for ULAs.</t>

<t>An IPv6 deployment, whether enterprise, residential or other, may use combinations of IPv6 GUAs, IPv6 ULAs, IPv4 globals, IPv4 RFC 1918 addressing, and may or may not use some form of NAT. This document makes no comment or recommendation on how ULAs are used, or on NAT, but notes that operationally where GUAs and ULAs are used alongside RFC 1918 addressing, an IPv6 GUA would be selected to reach an IPv6 GUA destination, but where only ULAs and RFC1918 addressing are used, RFC 1918 addresses will be preferred.</t>

<t>This document updates the default policy table to elevate the preference for ULAs such that ULAs will be preferred over all IPv4 addresses, providing more consistent and less confusing behaviour for operators.</t>

<t>Note that ULAs must never be used across site boundaries as if they were under unregistered global prefixes. Nothing in this document pertains to such misuse.</t>

<t>The emergence of this issue also reinforces the need for the original RFC 6724 address slection policy table to be configurable. RFC 6724 Section 2.1 states that the table <bcp14>SHOULD</bcp14> be configurable; this document proposes elevating that requirement to <bcp14>MUST</bcp14>, to ensure that any device can have its policy table tuned for the scenario in which it is deployed. Section 10 of RFC 6724 gives other examples of why configurability is important.</t>

<t>This document aims to improve the default handling of address selection for common cases, and unmanaged / automatic scenarios rather than those where DHCPv6 is deployed. Sites using DHCPv6 for host configuration management can make use of implementations of <xref target="RFC7078"/> to apply changes to the RFC 6724 policy table.</t>

<t>It has also become clearer from operational experience that the heuristic to prefer addresses drawn from a prefix advertised by a next-hop router is a valuable one to use.  This text therefore also proposes elevating that requirement in Section 5.5 from <bcp14>SHOULD</bcp14> to <bcp14>MUST</bcp14>.</t>

<t>These updates are discussed in more detail in the following sections, with a further section providing a summary of the proposed updates.</t>

<t>Authors' note for the -00 version: this draft also captures some of the meta discussion around not only the proposed changes but other suggestions drawn from 6man WG list discussions.  These elements will be removed if there is consensus to move the document forward on the proposed path.</t>

</section>
<section anchor="terminology"><name>Terminology</name>

<t>The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL
NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
"<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
described in BCPÂ 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>

<?line -18?>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="unintended-operational-issues-regarding-ipv6-preference-and-ulas"><name>Unintended Operational Issues Regarding IPv6 Preference and ULAs</name>

<t>The preference for use of IPv6 addressing over IPv4 addressing in <xref target="RFC6724"/> is inconsistent. As written, RFC 6724 section 10.3 states:</t>

<figure><artwork><![CDATA[
"The default policy table gives IPv6 addresses higher precedence than
IPv4 addresses.  This means that applications will use IPv6 in
preference to IPv4 when the two are equally suitable.  An
administrator can change the policy table to prefer IPv4 addresses by
giving the ::ffff:0.0.0.0/96 prefix a higher precedence".
]]></artwork></figure>

<t>The expected behavior would be that ULA address space would be preferred over legacy IPv4, however this is not the case. This presents an issue with any environment that will use ULA addressing alongside legacy IPv4, whether global or RFC 1918. This is counter to the standard expectations for legacy IPv4 / IPv6 dual-stack behavior in preferring IPv6, which is the case for GUA addressing.</t>

<section anchor="operational-implications"><name>Operational Implications</name>

<t>There are demonstrated and easily repeatable uses cases of ULA not being preferred in some OS and network equipment over legacy IPv4 that necessitate an update to RFC 6724 to better reflect the original intent of the RFC.</t>

<t>Below is an example of a gai.conf file from a modern Linux installation as of 25 May 2023:</t>

<figure><artwork><![CDATA[
# Configuration for getaddrinfo(3).
#
# So far only configuration for the destination address sorting is needed.
# RFC 3484 governs the sorting.  But the RFC also says that system
# administrators should be able to overwrite the defaults.  This can be
# achieved here.
#
# All lines have an initial identifier specifying the option followed by
# up to two values.  Information specified in this file replaces the
# default information.  Complete absence of data of one kind causes the
# appropriate default information to be used.  The supported commands include:
#
# reload  <yes|no>
#    If set to yes, each getaddrinfo(3) call will check whether this file
#    changed and if necessary reload.  This option should not really be
#    used.  There are possible runtime problems.  The default is no.
#
# label   <mask>   <value>
#    Add another rule to the RFC 3484 label table.  See section 2.1 in
#    RFC 3484.  The default is:
#
#label ::1/128       0
#label ::/0          1
#label 2002::/16     2
#label ::/96         3
#label ::ffff:0:0/96 4
#label fec0::/10     5
#label fc00::/7      6
#label 2001:0::/32   7
#
#    This default differs from the tables given in RFC 3484 by handling
#    (now obsolete) site-local IPv6 addresses and Unique Local Addresses.
#    The reason for this difference is that these addresses are never
#    NATed while IPv4 site-local addresses most probably are.  Given
#    the precedence of IPv6 over IPv4 (see below) on machines having only
#    site-local IPv4 and IPv6 addresses a lookup for a global address would
#    see the IPv6 be preferred.  The result is a long delay because the
#    site-local IPv6 addresses cannot be used while the IPv4 address is
#    (at least for the foreseeable future) NATed.  We also treat Teredo
#    tunnels special.
#
# precedence  <mask>   <value>
#    Add another rule to the RFC 3484 precedence table.  See section 2.1
#    and 10.3 in RFC 3484.  The default is:
#
#precedence  ::1/128       50
#precedence  ::/0          40
#precedence  2002::/16     30
#precedence ::/96          20
#precedence ::ffff:0:0/96  10
#
#    For sites which prefer IPv4 connections change the last line to
#
#precedence ::ffff:0:0/96  100

#
# scopev4  <mask>  <value>
#    Add another rule to the RFC 6724 scope table for IPv4 addresses.
#    By default the scope IDs described in section 3.2 in RFC 6724 are
#    used.  Changing these defaults should hardly ever be necessary.
#    The defaults are equivalent to:
#
#scopev4 ::ffff:169.254.0.0/112  2
#scopev4 ::ffff:127.0.0.0/104    2
#scopev4 ::ffff:0.0.0.0/96       14
]]></artwork></figure>

<t>The legacy IPv4 address range in the gai.conf file is "scopev4" and the prefix ::ffff:0.0.0.0/96 which has a higher precedence (35) in RFC 6724 than the ULA prefix of fc00::/7 (3). This results in legacy IPv4 being preferred over IPv6 ULA. While not inherently undesirable, the operational outcome when utilizing dual-stack with ULA is inconsistent and imparts unnecessary difficulty for both troubleshooting and creating the requisite baseline of the expected behavior which are both requirements for supportable production deployments. Depending on the host implementation, security baseline expectations can be inconsistent at best and haphazard at worst.</t>

<t>As the gai.conf file, or an equivalent within a given operating system, is referenced it dictates the
behavior of the getaddrinfo() or analogous process. More specifically, where getaddrinfo() or a comparable API is used, the sorting behavior should take into account both
the source address of the requesting host as well as the destination addresses returned and sort according to both source and destination addresses, i.e, when a ULA address is
returned, the source address selection should return and use a ULA address if available. Similarly, if a GUA address is returned the source address selection should return a GUA source address if available.</t>

<t>However, there are clearly evidenced example of three failure scenarios:</t>

<t><list style="numbers">
  <t>ULA per RFC 6724 is less preferred (the Precedence value is lower) than all legacy IPv4 (represented by ::ffff:0:0/96 in the aforementioned table).</t>
  <t>Because of the lower Precedence value of fc00::/7, if a host has legacy IPv4 enabled, it will use legacy IPv4 before using ULA.</t>
  <t>A dual-stacked client will source the traffic from the legacy IPv4 address, meaning it will require a corresponding legacy IPv4 destination address.</t>
</list></t>

<t>For scenario number 3, when a host resolves through DNS a destination with A and AAAA DNS records, the host will choose the A record to get an legacy IPv4 address for the destination, meaning ULA IPv6 is rendered unused.</t>

<t>As a result, the use of ULAs is not a viable option for dual-stack networking transition planning, large scale network modeling, network lab environments or other modes of large scale networking that run both IPv4 and IPv6 concurrently with the expectation that IPv6 will be preferred by default.</t>

</section>
</section>
<section anchor="configurability-of-the-default-policy-table"><name>Configurability of the Default Policy Table</name>

<t>In principle the above problem would not be an issue were the RFC 6724 default policy table readily configurable in all systems. Section 10.6 states that ULAs can be preferred by adding a site-specific entry to the default policy table. In practice, this is currently not always possible.</t>

<t>While conceptually the intent was for a configurable, longest-match table to be adjusted as needed. In practice, modifying the prefix policy table remains difficult across platforms, and in some cases impossible. Embedded, proprietary, closed source, and IoT devices are especially difficult to adjust, and are in many cases incapable of any adjustment. Large scale manipulation of the policy table also remains out of the realm of realistic support for small and medium scale operators due to lack of ability to manipulate all the hosts and systems, or a lack of tooling and access.</t>

<t>Operational experience suggests that the default policy table needs to be as configurable as possible in as many systems as possible. This update therefore proposes that the requirement that IPv6 implementations support configurable address selection via a mechanism at least as powerful as the policy table be elevated from a <bcp14>SHOULD</bcp14> to a <bcp14>MUST</bcp14>.</t>

<t>Authors' note for the -00 version: of course we state above that for some platforms, the ability to implement such a method is challenging.  The question for the 6man WG is how to ensure configurability is as widespread as possible.</t>

</section>
<section anchor="next-hop-router-heuristic"><name>Next-hop router heuristic</name>

<t>The heuristic for address selection defined in Section 5.5 of RFC 6724 to prefer addresses in a prefix advertised by a next-hop router has proven to be very useful.  RFC 6724 does not state any requirement for <bcp14>SHOULD</bcp14> or <bcp14>MUST</bcp14> for this heuristic to be used; this update therefore proposes stating that the application of the heuristic be a <bcp14>MUST</bcp14>.</t>

</section>
<section anchor="preference-of-6to4-addresses"><name>Preference of 6to4 addresses</name>

<t>The anycast prefix for 6to4 relays was deprecated by <xref target="RFC7526"/> in 2015, and since that time the use of 6to4 addressing has further declined to the point where it is generally not seen and can be considered to all intents and purposes deprecated in use.  This document therefore demotes the preference of the 6to4 prefix in the policy table to the same minimum preference as carried by the deprecated site local and 6bone address prefixes.</t>

</section>
<section anchor="adjustments-to-rfc-6724"><name>Adjustments to RFC 6724</name>

<t>Rule 2.1 of RFC 6724 states:</t>

<figure><artwork><![CDATA[
IPv6 implementations SHOULD support configurable address selection
via a mechanism at least as powerful as the policy tables defined
here.  It is important that implementations provide a way to change
the default policies as more experience is gained.  Sections 10.3
through 10.7 provide examples of the kind of changes that might be
needed.
]]></artwork></figure>

<t>This document updates RFC 6724 section 2.1 to the following:</t>

<figure><artwork><![CDATA[
IPv6 implementations MUST support configurable address selection
via a mechanism at least as powerful as the policy tables defined
here.  It is important that implementations provide a way to change
the default policies to ensure operational supportability and flexibility in deployment.
Sections 10.3 through 10.7 provide examples of the kind of changes that might be
needed.
]]></artwork></figure>

<t>Rule 2.1 of RFC 6724 further states:</t>

<figure><artwork><![CDATA[
If an implementation is not configurable or has not been configured,
   then it SHOULD operate according to the algorithms specified here in
   conjunction with the following default policy table:


      Prefix        Precedence Label
      ::1/128               50     0
      ::/0                  40     1
      ::ffff:0:0/96         35     4
      2002::/16             30     2
      2001::/32              5     5
      fc00::/7               3    13
      ::/96                  1     3
      fec0::/10              1    11
      3ffe::/16              1    12
]]></artwork></figure>

<t>This document updates RFC 6724 section 2.1 to the following:</t>

<figure><artwork><![CDATA[
If an implementation is not configurable or has not been configured,
   then it SHOULD operate according to the algorithms specified here in
   conjunction with the following default policy table:


      Prefix        Precedence Label
      ::1/128               50     0
      ::/0                  40     1
      fc00::/7              35    13
      ::ffff:0:0/96         30     4
      2001::/32              5     5
      2002::/16              1     2
      ::/96                  1     3
      fec0::/10              1    11
      3ffe::/16              1    12
]]></artwork></figure>

<t>This preference table update moves 2002::/16 to de-preference status in line with RFC 7526 and changes the default address selection to move fc00::/7 above legacy IPv4, changing ::ffff:0:0/96 to preference 30.</t>

<t>Rule 5.5 of RFC 6724 states:</t>

<figure><artwork><![CDATA[
Rule 5.5: Prefer addresses in a prefix advertised by the next-hop.
If SA or SA's prefix is assigned by the selected next-hop that will
be used to send to D and SB or SB's prefix is assigned by a different
next-hop, then prefer SA.  Similarly, if SB or SB's prefix is
assigned by the next-hop that will be used to send to D and SA or
SA's prefix is assigned by a different next-hop, then prefer SB.
Discussion: An IPv6 implementation is not required to remember
which next-hops advertised which prefixes.  The conceptual models
of IPv6 hosts in Section 5 of {{RFC4861}} and Section 3 of {{RFC4191}}
have no such requirement.  Hence, Rule 5.5 is only applicable to
implementations that track this information.
]]></artwork></figure>

<t>This document updates RFC 6724 section 5.5 to the following:</t>

<figure><artwork><![CDATA[
Rule 5.5: Hosts MUST prefer addresses in a prefix advertised by the next-hop.
If SA or SA's prefix is assigned by the selected next-hop that will
be used to send to D and SB or SB's prefix is assigned by a different
next-hop, then prefer SA.  Similarly, if SB or SB's prefix is
assigned by the next-hop that will be used to send to D and SA or
SA's prefix is assigned by a different next-hop, then prefer SB.
Discussion: An IPv6 implementation is not required to remember
which next-hops advertised which prefixes.  The conceptual models
of IPv6 hosts in Section 5 of {{RFC4861}} and Section 3 of {{RFC4191}}
have no such requirement.  Hence, Rule 5.5 is only applicable to
implementations that track this information.
]]></artwork></figure>

</section>
<section anchor="the-practicalities-of-implementing-address-selection-support"><name>The practicalities of implementing address selection support</name>

<t>As with most adjustments to standards, and using RFC 6724
itself as a measuring stick, the updates defined in this document will likely take between 8-20 years to become common enough for consistent behavior within most operating systems. At the time of writing, it has been over 10 years since RFC 6724
has been published but we continue to see existing commercial and open source operating systems exhibiting <xref target="RFC3484"/>
behavior.</t>

<t>While it should be noted that RFC 6724 defines a solution that is functional theoretically, operationally the solution of adjusting the address preference selection table
is both operating system dependent and unable to be signaled by any network mechanism such as within a router advertisement or DHCPv6 option (while <xref target="RFC7078"/> defines such a DHCPv6 option, it is not by any means widely implemented). This lack of an
intra-protocol or network-based ability to adjust address selection preference, along with the inability to adjust a notable number of operating systems either programmatically or manually
renders operational scalability of such a mechanism challenging.</t>

<t>It is especially important to note this behavior in the long lifecycle equipment that exists in industrial control and operational technology environments due to their very long mean time to replacement/lifecycle.</t>

<t>In practice this means that network operators and those who design networks need to keep these considerations in mind.  One workaround should the ULA and IPv4 preference issue be of concern is to use IPv6-only networking, and to simply not deploy dual-stack. Another is to use GUA IPv6 addresses, which are preferred by defaul over all IPv4 addresses.</t>

</section>
<section anchor="notes-on-the-6man-working-group-list-discussion"><name>Notes on the 6Man Working Group list discussion</name>

<t>Authors' note for the -00 version: this section captures some interesting suggestions from the 300 or so emails in the past few months in the 6man WG on this topic. These are noted, and captured here to inform discussion of the draft should it move forward in the WG.</t>

<t><list style="symbols">
  <t>The suggestion to automatically insert an observed ULA /48 into the policy table to elevate a locally used ULA above IPv4 and GUA addresses was quite popular, though kernel implementation may be challenging for all platforms. This would be supported by changing the â<bcp14>MAY</bcp14>" in Section 2.1 and the âmightâ in Section 10.6 of RFC 6724 to â<bcp14>SHOULD</bcp14>â (or even a <bcp14>MUST</bcp14>). The case for a <bcp14>MUST</bcp14> is greater in order to allow for maximum network operator flexibility if the source selection table is not modified by the operating system. This could be an acceptable compromise, but requires two additional additions to an IPv6 ULA network: router manufacturers must now implement this new feature that is not a standard option in IPv6 Router Advertisements (RAs) and operators must know that the capability to add a tag for ULA prefixes in the source selection table is an operational possibility and now part of an architectural consideration. Network operators using managed addressing may have not considered using a tagged ULA prefix in RA as an option.</t>
  <t>The list discussed handling of corner cases, though what constitutes a corner case is in itself not wholly clear. The above suggestion for example would not cover the case where two sites using ULAs merged, and multiple ULA prefixes needed to be considered local. The open question is how deeply we consider corner cases; is some requirement for explicit configuration of certain cases inevitable? Is improving the current situation sufficient?</t>
  <t>A suggestion to use an RA PIO with A=0 and L=0, based on an interpretation of Section 2.1 of RFC 8028, was proposed but considered something of a stretch. That said, it could be an RA-based starting point to give some configurability for non-DHCPv6 networks.</t>
</list></t>

</section>
<section anchor="acknowledgements"><name>Acknowledgements</name>

<t>The authors would like to acknowledge the valuable input and contributions of the 6man WG including Brian Carpenter, XiPeng Xiao, Eduard Vasilenko, David Farmer, Bob Hinden, Ed Horley, Tom Coffeen, Scott Hogg, and Chris Cummings.</t>

</section>
<section anchor="security-considerations"><name>Security Considerations</name>

<t>There are no direct security considerations in this document.</t>

<t>The mixed preference for IPv6 over IPv4 from the default policy table in RFC 6724 represents a potential security issue, given an operator may expect ULAs to be used when in practice RFC 1918 addresses are used instead.</t>

<t>When using the updated ULA source address selection defined in this document, network operators <bcp14>MUST</bcp14> follow Section 4.3 of <xref target="RFC4193"/> for firewall/packet filtering as "routers be configured by default to keep any packets with Local
IPv6 addresses from leaking outside of the site and to keep any site prefixes from being advertised outside of their site." Following this security practice is critical when ULAs have more broad reachability.</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<t>None.</t>

</section>
<section anchor="appendix-a-changes-since-rfc6724"><name>Appendix A. Changes since RFC6724</name>

<t><list style="symbols">
  <t>Update to default preference table moving 6to4 address block 2002::/16 to de-preference status in line with <eref target="RFC7526"></eref></t>
  <t>Change the default address selection to move fc00::/7 to preference 35, above legacy IPv4,</t>
  <t>Change ::ffff:0:0/96 to preference 30.</t>
  <t>Change section 5.5 Prefer addresses in a prefix advertised by the next-hop to a <bcp14>MUST</bcp14></t>
</list></t>

</section>


  </middle>

  <back>


    <references title='Normative References'>

&RFC2119;
&RFC4193;
&RFC4861;
&RFC4191;
&RFC7078;
&RFC7526;
&RFC8174;


    </references>

    <references title='Informative References'>

&RFC6724;
&RFC1918;
&RFC3484;


    </references>



  </back>

<!-- ##markdown-source:
H4sIAC5DnGQAA+1c65Ibx3X+P0/RIX+YdGHBvXFJrmXJ4K4krou3cMkoLpd/
DGYaQGsHM/Bcdgk5TvlBkqo8Sx7FT5LznXO6p2cAypRSqSRVXlWJwKCnL6fP
+c61++DgIGldW9hz87a2C1vbMrNmUdXmw8tZY6pbW5t331wcPTt6atI8r23T
2Ma4Eg/PnhyfJnmVlemaXs/rdNEezLs6XRauOjhbp+VBvcjQ6KDb5Glrkyxt
z03T5onb1OemrbumPT48fHZ4nKS1Tc/NVdkmd8tzc/Zq9jq5ueMHti5te3CJ
zhPppqEGGDlJ0q5dVfV5YvjvQP81ND1q83pqnutkwg8y09cuu9n9rapp5K9L
Wy+35jpzoENjXtv2rqpvQiO7Tl1xbvwqf0OEukvr3JXLTZGWdkpz3T+b91Nz
saruytFU3rv16DlP47euycZjUtMpN/3N9/TrNM2m3c3+sX47NZddmaXjwX5L
u7vejn/jAd+n2WpbleZyS01d1owH/z7nl37TSrtcm02zap0kZVWv09bdWuwE
8cXx0dEz/Xh69OzEf3x6dtQ/9R+fHD556j8+Pj47TxJXLkb9Ybf1I/hQP56c
PuWnSXJwcGDSedPWadYmyfuVawxxZbe2ZWuUZfACc42Zp43NDS212tiaRqnK
tDD2I33hLTfL1JXUoHH44trGbLp54TJuKeLQ2tJsbVo3Jl1WU+JRs0nr1mVd
kdb0RhiyXVmz6WWqWpgPpftjZ83LKqMxZ0GaHkDUHkKo8EpuF2lXtF7aTGML
m/Hom4omsjVtOi/sxNytXLYyKclo7ZaOVlFs8S7Pfr7tF7yiJkV1RxOnyWQ2
58m0q7Q0hV2m1N/V29tTPxox8tS8p1nIIgxxNcRgXrUrtDsz3xbVnCZPK8nS
po0X8e0HLCItc0GOdGXTHIumiQ2GoLaVrDRej2krM7ctibtpOiJivDu53RTV
lrcT3ROwpEvLX0FTDEak29RV3jGdsICYBdKiqcKm1PaPnav5bZ5HVpULtyRx
nrvCtVv0uDM1DLoZgmMHSpmwoEVdrU3KjdxHWiixSesa2YjUlPZje7CqNqau
OlrghDvM7brawyXo/KytTodgG/NFPDXeq8aajLZzic6q0GxuV+mto97cmkhz
a4msm01Vt9FCSXjXRIIOHaQYqemYoyaEb60pq9YUbu1aWkZb0aS7toJYZuaR
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
XAAA

-->

</rfc>

