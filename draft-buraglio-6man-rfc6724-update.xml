<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.33 (Ruby 2.6.10) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

<!ENTITY RFC2119 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC4193 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.4193.xml">
<!ENTITY RFC7078 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.7078.xml">
<!ENTITY RFC7526 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.7526.xml">
<!ENTITY RFC4191 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.4191.xml">
<!ENTITY RFC4861 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.4861.xml">
<!ENTITY RFC8174 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml">
<!ENTITY RFC6724 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.6724.xml">
<!ENTITY RFC1918 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.1918.xml">
<!ENTITY RFC3484 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.3484.xml">
]>


<rfc ipr="trust200902" docName="draft-buraglio-6man-rfc6724-update" category="std" consensus="true" updates="6724">
  <front>
    <title>Preference for ULAs over RFC1918 addresses in RFC6724</title>

    <author initials="N." surname="Buraglio" fullname="Nick Buraglio">
      <organization>Energy Sciences Network</organization>
      <address>
        <email>buraglio@forwardingplane.net</email>
      </address>
    </author>
    <author initials="T." surname="Chown" fullname="Tim Chown">
      <organization>Jisc</organization>
      <address>
        <email>Tim.Chown@jisc.ac.uk</email>
      </address>
    </author>
    <author initials="J." surname="Duncan" fullname="Jeremy Duncan">
      <organization>Tachyon Dynamics</organization>
      <address>
        <email>jduncan@tachyondynamics.com</email>
      </address>
    </author>

    <date year="2023" month="June" day="28"/>

    <area>Int</area>
    <workgroup>6MAN</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<?line 45?>

<t>This document updates RFC 6724 based on operational experience gained since its publication over ten years ago. In particular it updates the preference of Unique Local Addresses (ULAs) in the default address selection policy table, which as originally defined by RFC 6724 has lower precedence than legacy IPv4 addressing. The update places both IPv6 Global Unicast Addresses (GUAs) and ULAs ahead of all IPv4 addresses on the policy table to better suit operational deployment and management of ULAs in production. This document also updates requirements on configurability of the policy table and preference for using ddresses from a prefix advertised by a next-hop router, and demotes the preference for 6to4 addresses in the default policy table. These changes to default behavior improve supportability of common use cases such as, but not limited to, automatic / unmanaged scenarios. It is recognized that some less common deployment situations may require explicit confioguration or custom changes to acheive desired operational parameters.</t>



    </abstract>



  </front>

  <middle>


<?line 49?>

<section anchor="introduction"><name>Introduction</name>

<t>When <xref target="RFC6724"/> was published in 2012 it was expected that the default policy table may need to be updated from operational experience; section 2.1 says "It is important that implementations provide a way to change the default policies as more experience is gained" and points to the examples in Section 10, including Section 10.6 which considers a ULA example.</t>

<t>This document is written on the basis of operational experience, in particular for scenarios where ULAs are used within a site. The current default policy table in RFC 6724 leads to preference for IPv6 GUAs over IPv4 globals, which is widely considered to be preferential behaviour to support greater use of IPv6 in dual-stack environments, and to allow sites to phase out IPv4 as its use becomes ever lower.</t>

<t>However, the  default policy table also puts IPv6 ULAs below all IPv4 addresses, including <xref target="RFC1918"/> addresses. For many site operators this behavior will be counter-intuitive, and may create difficulties with respect to planning, operational, and security implications for environments where ULA addressing is used in certain IPv4/IPv6 dual-stack network scenarios. The expected prioritization of IPv6 traffic over IPv4 by default, as happens with IPv6 GUA addressing, will not happen for ULAs.</t>

<t>An IPv6 deployment, whether enterprise, residential or other, may use combinations of IPv6 GUAs, IPv6 ULAs, IPv4 globals, IPv4 RFC 1918 addressing, and may or may not use some form of NAT. This document makes no comment or recommendation on how ULAs are used, or on NAT, but notes that operationally where GUAs and ULAs are used alongside RFC 1918 addressing, an IPv6 GUA would be selected to reach an IPv6 GUA destination, but where only ULAs and RFC1918 addressing are used, RFC 1918 addresses will be preferred.</t>

<t>This document updates the default policy table to elevate the preference for ULAs such that ULAs will be preferred over all IPv4 addresses, providing more consistent and less confusing behaviour for operators.</t>

<t>Note that ULAs must never be used across site boundaries as if they were under unregistered global prefixes. Nothing in this document pertains to such misuse.</t>

<t>The emergence of this issue also reinforces the need for the original RFC 6724 address slection policy table to be configurable. RFC 6724 Section 2.1 states that the table <bcp14>SHOULD</bcp14> be configurable; this document proposes elevating that requirement to <bcp14>MUST</bcp14>, to ensure that any device can have its policy table tuned for the scenario in which it is deployed. Section 10 of RFC 6724 gives other examples of why configurability is important.</t>

<t>This document aims to improve the default handling of address selection for common cases, and unmanaged / automatic scenarios rather than those where DHCPv6 is deployed. Sites using DHCPv6 for host configuration management can make use of implementations of <xref target="RFC7078"/> to apply changes to the RFC 6724 policy table.</t>

<t>It has also become clearer from operational experience that the heuristic to prefer addresses drawn from a prefix advertised by a next-hop router is a valuable one to use.  This text therefore also proposes elevating that requirement in Section 5.5 from <bcp14>SHOULD</bcp14> to <bcp14>MUST</bcp14>.</t>

<t>These updates are discussed in more detail in the following sections, with a further section providing a summary of the proposed updates.</t>

<t>Authors' note for the -00 version: this draft also captures some of the meta discussion around not only the proposed changes but other suggestions drawn from 6man WG list discussions.  These elements will be removed if there is consensus to move the document forward on the proposed path.</t>

</section>
<section anchor="terminology"><name>Terminology</name>

<t>The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL
NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
"<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
described in BCPÂ 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>

<?line -18?>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="unintended-operational-issues-regarding-ipv6-preference-and-ulas"><name>Unintended Operational Issues Regarding IPv6 Preference and ULAs</name>

<t>The preference for use of IPv6 addressing over IPv4 addressing in <xref target="RFC6724"/> is inconsistent. As written, RFC 6724 section 10.3 states:</t>

<figure><artwork><![CDATA[
"The default policy table gives IPv6 addresses higher precedence than
IPv4 addresses.  This means that applications will use IPv6 in
preference to IPv4 when the two are equally suitable.  An
administrator can change the policy table to prefer IPv4 addresses by
giving the ::ffff:0.0.0.0/96 prefix a higher precedence".
]]></artwork></figure>

<t>The expected behavior would be that ULA address space would be preferred over legacy IPv4, however this is not the case. This presents an issue with any environment that will use ULA addressing alongside legacy IPv4, whether global or RFC 1918. This is counter to the standard expectations for legacy IPv4 / IPv6 dual-stack behavior in preferring IPv6, which is the case for GUA addressing.</t>

<section anchor="operational-implications"><name>Operational Implications</name>

<t>There are demonstrated and easily repeatable uses cases of ULA not being preferred in some OS and network equipment over legacy IPv4 that necessitate an update to RFC 6724 to better reflect the original intent of the RFC.</t>

<t>Below is an example of a gai.conf file from a modern Linux installation as of 25 May 2023:</t>

<figure><artwork><![CDATA[
# Configuration for getaddrinfo(3).
#
# So far only configuration for the destination address sorting is needed.
# RFC 3484 governs the sorting.  But the RFC also says that system
# administrators should be able to overwrite the defaults.  This can be
# achieved here.
#
# All lines have an initial identifier specifying the option followed by
# up to two values.  Information specified in this file replaces the
# default information.  Complete absence of data of one kind causes the
# appropriate default information to be used.  The supported commands include:
#
# reload  <yes|no>
#    If set to yes, each getaddrinfo(3) call will check whether this file
#    changed and if necessary reload.  This option should not really be
#    used.  There are possible runtime problems.  The default is no.
#
# label   <mask>   <value>
#    Add another rule to the RFC 3484 label table.  See section 2.1 in
#    RFC 3484.  The default is:
#
#label ::1/128       0
#label ::/0          1
#label 2002::/16     2
#label ::/96         3
#label ::ffff:0:0/96 4
#label fec0::/10     5
#label fc00::/7      6
#label 2001:0::/32   7
#
#    This default differs from the tables given in RFC 3484 by handling
#    (now obsolete) site-local IPv6 addresses and Unique Local Addresses.
#    The reason for this difference is that these addresses are never
#    NATed while IPv4 site-local addresses most probably are.  Given
#    the precedence of IPv6 over IPv4 (see below) on machines having only
#    site-local IPv4 and IPv6 addresses a lookup for a global address would
#    see the IPv6 be preferred.  The result is a long delay because the
#    site-local IPv6 addresses cannot be used while the IPv4 address is
#    (at least for the foreseeable future) NATed.  We also treat Teredo
#    tunnels special.
#
# precedence  <mask>   <value>
#    Add another rule to the RFC 3484 precedence table.  See section 2.1
#    and 10.3 in RFC 3484.  The default is:
#
#precedence  ::1/128       50
#precedence  ::/0          40
#precedence  2002::/16     30
#precedence ::/96          20
#precedence ::ffff:0:0/96  10
#
#    For sites which prefer IPv4 connections change the last line to
#
#precedence ::ffff:0:0/96  100

#
# scopev4  <mask>  <value>
#    Add another rule to the RFC 6724 scope table for IPv4 addresses.
#    By default the scope IDs described in section 3.2 in RFC 6724 are
#    used.  Changing these defaults should hardly ever be necessary.
#    The defaults are equivalent to:
#
#scopev4 ::ffff:169.254.0.0/112  2
#scopev4 ::ffff:127.0.0.0/104    2
#scopev4 ::ffff:0.0.0.0/96       14
]]></artwork></figure>

<t>The legacy IPv4 address range in the gai.conf file is "scopev4" and the prefix ::ffff:0.0.0.0/96 which has a higher precedence (35) in RFC 6724 than the ULA prefix of fc00::/7 (3). This results in legacy IPv4 being preferred over IPv6 ULA. While not inherently undesirable, the operational outcome when utilizing dual-stack with ULA is inconsistent and imparts unnecessary difficulty for both troubleshooting and creating the requisite baseline of the expected behavior which are both requirements for supportable production deployments. Depending on the host implementation, security baseline expectations can be inconsistent at best and haphazard at worst.</t>

<t>As the gai.conf file, or an equivalent within a given operating system, is referenced it dictates the
behavior of the getaddrinfo() or analogous process. More specifically, where getaddrinfo() or a comparable API is used, the sorting behavior should take into account both
the source address of the requesting host as well as the destination addresses returned and sort according to both source and destination addresses, i.e, when a ULA address is
returned, the source address selection should return and use a ULA address if available. Similarly, if a GUA address is returned the source address selection should return a GUA source address if available.</t>

<t>However, there are clearly evidenced example of three failure scenarios:</t>

<t><list style="numbers">
  <t>ULA per RFC 6724 is less preferred (the Precedence value is lower) than all legacy IPv4 (represented by ::ffff:0:0/96 in the aforementioned table).</t>
  <t>Because of the lower Precedence value of fc00::/7, if a host has legacy IPv4 enabled, it will use legacy IPv4 before using ULA.</t>
  <t>A dual-stacked client will source the traffic from the legacy IPv4 address, meaning it will require a corresponding legacy IPv4 destination address.</t>
</list></t>

<t>For scenario number 3, when a host resolves through DNS a destination with A and AAAA DNS records, the host will choose the A record to get an legacy IPv4 address for the destination, meaning ULA IPv6 is rendered unused.</t>

<t>As a result, the use of ULAs is not a viable option for dual-stack networking transition planning, large scale network modeling, network lab environments or other modes of large scale networking that run both IPv4 and IPv6 concurrently with the expectation that IPv6 will be preferred by default.</t>

</section>
</section>
<section anchor="configurability-of-the-default-policy-table"><name>Configurability of the Default Policy Table</name>

<t>In principle the above problem would not be an issue were the RFC 6724 default policy table readily configurable in all systems. Section 10.6 states that ULAs can be preferred by adding a site-specific entry to the default policy table. In practice, this is currently not always possible.</t>

<t>While conceptually the intent was for a configurable, longest-match table to be adjusted as needed. In practice, modifying the prefix policy table remains difficult across platforms, and in some cases impossible. Embedded, proprietary, closed source, and IoT devices are especially difficult to adjust, and are in many cases incapable of any adjustment. Large scale manipulation of the policy table also remains out of the realm of realistic support for small and medium scale operators due to lack of ability to manipulate all the hosts and systems, or a lack of tooling and access.</t>

<t>Operational experience suggests that the default policy table needs to be as configurable as possible in as many systems as possible. This update therefore proposes that the requirement that IPv6 implementations support configurable address selection via a mechanism at least as powerful as the policy table be elevated from a <bcp14>SHOULD</bcp14> to a <bcp14>MUST</bcp14>.</t>

<t>Authors' note for the -00 version: of course we state above that for some platforms, the ability to implement such a method is challenging.  The question for the 6man WG is how to ensure configurability is as widespread as possible.</t>

</section>
<section anchor="next-hop-router-heuristic"><name>Next-hop router heuristic</name>

<t>The heuristic for address selection defined in Section 5.5 of RFC 6724 to prefer addresses in a prefix advertised by a next-hop router has proven to be very useful.  RFC 6724 does not state any requirement for <bcp14>SHOULD</bcp14> or <bcp14>MUST</bcp14> for this heuristic to be used; this update therefore proposes stating that the application of the heuristic be a <bcp14>MUST</bcp14>.</t>

</section>
<section anchor="preference-of-6to4-addresses"><name>Preference of 6to4 addresses</name>

<t>The anycast prefix for 6to4 relays was deprecated by <xref target="RFC7526"/> in 2015, and since that time the use of 6to4 addressing has further declined to the point where it is generally not seen and can be considered to all intents and purposes deprecated in use.  This document therefore demotes the preference of the 6to4 prefix in the policy table to the same minimum preference as carried by the deprecated site local and 6bone address prefixes.</t>

</section>
<section anchor="adjustments-to-rfc-6724"><name>Adjustments to RFC 6724</name>

<t>Rule 2.1 of RFC 6724 states:</t>

<figure><artwork><![CDATA[
IPv6 implementations SHOULD support configurable address selection
via a mechanism at least as powerful as the policy tables defined
here.  It is important that implementations provide a way to change
the default policies as more experience is gained.  Sections 10.3
through 10.7 provide examples of the kind of changes that might be
needed.
]]></artwork></figure>

<t>This document updates RFC 6724 section 2.1 to the following:</t>

<figure><artwork><![CDATA[
IPv6 implementations MUST support configurable address selection
via a mechanism at least as powerful as the policy tables defined
here.  It is important that implementations provide a way to change
the default policies to ensure operational supportability and flexibility in deployment.
Sections 10.3 through 10.7 provide examples of the kind of changes that might be
needed.
]]></artwork></figure>

<t>Rule 2.1 of RFC 6724 further states:</t>

<figure><artwork><![CDATA[
If an implementation is not configurable or has not been configured,
   then it SHOULD operate according to the algorithms specified here in
   conjunction with the following default policy table:


      Prefix        Precedence Label
      ::1/128               50     0
      ::/0                  40     1
      ::ffff:0:0/96         35     4
      2002::/16             30     2
      2001::/32              5     5
      fc00::/7               3    13
      ::/96                  1     3
      fec0::/10              1    11
      3ffe::/16              1    12
]]></artwork></figure>

<t>This document updates RFC 6724 section 2.1 to the following:</t>

<figure><artwork><![CDATA[
If an implementation is not configurable or has not been configured,
   then it SHOULD operate according to the algorithms specified here in
   conjunction with the following default policy table:


      Prefix        Precedence Label
      ::1/128               50     0
      ::/0                  40     1
      fc00::/7              35    13
      ::ffff:0:0/96         30     4
      2001::/32              5     5
      2002::/16              1     2
      ::/96                  1     3
      fec0::/10              1    11
      3ffe::/16              1    12
]]></artwork></figure>

<t>This preference table update moves 2002::/16 to de-preference status in line with RFC 7526 and changes the default address selection to move fc00::/7 above legacy IPv4, changing ::ffff:0:0/96 to preference 30.</t>

<t>Rule 5.5 of RFC 6724 states:</t>

<figure><artwork><![CDATA[
Rule 5.5: Prefer addresses in a prefix advertised by the next-hop.
If SA or SA's prefix is assigned by the selected next-hop that will
be used to send to D and SB or SB's prefix is assigned by a different
next-hop, then prefer SA.  Similarly, if SB or SB's prefix is
assigned by the next-hop that will be used to send to D and SA or
SA's prefix is assigned by a different next-hop, then prefer SB.
Discussion: An IPv6 implementation is not required to remember
which next-hops advertised which prefixes.  The conceptual models
of IPv6 hosts in Section 5 of {{RFC4861}} and Section 3 of {{RFC4191}}
have no such requirement.  Hence, Rule 5.5 is only applicable to
implementations that track this information.
]]></artwork></figure>

<t>This document updates RFC 6724 section 5.5 to the following:</t>

<figure><artwork><![CDATA[
Rule 5.5: Hosts MUST prefer addresses in a prefix advertised by the next-hop.
If SA or SA's prefix is assigned by the selected next-hop that will
be used to send to D and SB or SB's prefix is assigned by a different
next-hop, then prefer SA.  Similarly, if SB or SB's prefix is
assigned by the next-hop that will be used to send to D and SA or
SA's prefix is assigned by a different next-hop, then prefer SB.
Discussion: An IPv6 implementation is not required to remember
which next-hops advertised which prefixes.  The conceptual models
of IPv6 hosts in Section 5 of {{RFC4861}} and Section 3 of {{RFC4191}}
have no such requirement.  Hence, Rule 5.5 is only applicable to
implementations that track this information.
]]></artwork></figure>

</section>
<section anchor="the-practicalities-of-implementing-address-selection-support"><name>The practicalities of implementing address selection support</name>

<t>As with most adjustments to standards, and using RFC 6724
itself as a measuring stick, the updates defined in this document will likely take between 8-20 years to become common enough for consistent behavior within most operating systems. At the time of writing, it has been over 10 years since RFC 6724
has been published but we continue to see existing commercial and open source operating systems exhibiting <xref target="RFC3484"/>
behavior.</t>

<t>While it should be noted that RFC 6724 defines a solution that is functional theoretically, operationally the solution of adjusting the address preference selection table
is both operating system dependent and unable to be signaled by any network mechanism such as within a router advertisement or DHCPv6 option (while <xref target="RFC7078"/> defines such a DHCPv6 option, it is not by any means widely implemented). This lack of an
intra-protocol or network-based ability to adjust address selection preference, along with the inability to adjust a notable number of operating systems either programmatically or manually
renders operational scalability of such a mechanism challenging.</t>

<t>It is especially important to note this behavior in the long lifecycle equipment that exists in industrial control and operational technology environments due to their very long mean time to replacement/lifecycle.</t>

<t>In practice this means that network operators and those who design networks need to keep these considerations in mind.  One workaround should the ULA and IPv4 preference issue be of concern is to use IPv6-only networking, and to simply not deploy dual-stack. Another is to use GUA IPv6 addresses, which are preferred by defaul over all IPv4 addresses.</t>

</section>
<section anchor="notes-on-the-6man-working-group-list-discussion"><name>Notes on the 6Man Working Group list discussion</name>

<t>Authors' note for the -00 version: this section captures some interesting suggestions from the 300 or so emails in the past few months in the 6man WG on this topic. These are noted, and captured here to inform discussion of the draft should it move forward in the WG.</t>

<t><list style="symbols">
  <t>The suggestion to automatically insert an observed ULA /48 into the policy table to elevate a locally used ULA above IPv4 and GUA addresses was quite popular, though kernel implementation may be challenging for all platforms. This would be supported by changing the â<bcp14>MAY</bcp14>" in Section 2.1 and the âmightâ in Section 10.6 of RFC 6724 to â<bcp14>SHOULD</bcp14>â (or even a <bcp14>MUST</bcp14>). The case for a <bcp14>MUST</bcp14> is greater in order to allow for maximum network operator flexibility if the source selection table is not modified by the operating system. This could be an acceptable compromise, but requires two additional additions to an IPv6 ULA network: router manufacturers must now implement this new feature that is not a standard option in IPv6 Router Advertisements (RAs) and operators must know that the capability to add a tag for ULA prefixes in the source selection table is an operational possibility and now part of an architectural consideration. Network operators using managed addressing may have not considered using a tagged ULA prefix in RA as an option.</t>
  <t>The list discussed handling of corner cases, though what constitutes a corner case is in itself not wholly clear. The above suggestion for example would not cover the case where two sites using ULAs merged, and multiple ULA prefixes needed to be considered local. The open question is how deeply we consider corner cases; is some requirement for explicit configuration of certain cases inevitable? Is improving the current situation sufficient?</t>
  <t>A suggestion to use an RA PIO with A=0 and L=0, based on an interpretation of Section 2.1 of RFC 8028, was proposed but considered something of a stretch. That said, it could be an RA-based starting point to give some configurability for non-DHCPv6 networks.</t>
</list></t>

</section>
<section anchor="acknowledgements"><name>Acknowledgements</name>

<t>The authors would like to acknowledge the valuable input and contributions of the 6man WG including Brian Carpenter, XiPeng Xiao, Eduard Vasilenko, David Farmer, Bob Hinden, Ed Horley, Tom Coffeen, Scott Hogg, and Chris Cummings.</t>

</section>
<section anchor="security-considerations"><name>Security Considerations</name>

<t>There are no direct security considerations in this document.</t>

<t>The mixed preference for IPv6 over IPv4 from the default policy table in RFC 6724 represents a potential security issue, given an operator may expect ULAs to be used when in practice RFC 1918 addresses are used instead.</t>

<t>When using the updated ULA source address selection defined in this document, network operators <bcp14>MUST</bcp14> follow Section 4.3 of <xref target="RFC4193"/> for firewall/packet filtering as "routers be configured by default to keep any packets with Local
IPv6 addresses from leaking outside of the site and to keep any site prefixes from being advertised outside of their site." Following this security practice is critical when ULAs have more broad reachability.</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<t>None.</t>

</section>
<section anchor="appendix-a-changes-since-rfc6724"><name>Appendix A. Changes since RFC6724</name>

<t><list style="symbols">
  <t>Update to default preference table moving 6to4 address block 2002::/16 to de-preference status in line with <eref target="RFC7526"></eref></t>
  <t>Change the default address selection to move fc00::/7 to preference 35, above legacy IPv4,</t>
  <t>Change ::ffff:0:0/96 to preference 30.</t>
  <t>Change section 5.5 Prefer addresses in a prefix advertised by the next-hop to a <bcp14>MUST</bcp14></t>
</list></t>

</section>


  </middle>

  <back>


    <references title='Normative References'>

&RFC2119;
&RFC4193;
&RFC7078;
&RFC7526;
&RFC4191;
&RFC4861;
&RFC8174;


    </references>

    <references title='Informative References'>

&RFC6724;
&RFC1918;
&RFC3484;


    </references>



  </back>

<!-- ##markdown-source:
H4sIAOJRnGQAA+1c65Ibx3X+P0/RIX+YdGHBvXFJrmXJ4K4krou3cMkoLpd/
DGYaQGsHM/Bcdgk5TvlBkqo8Sx7FT5LznXO6p2cAypRSqSRVXlWJwKCnL6fP
+c61++DgIGldW9hz87a2C1vbMrNmUdXmw8tZY6pbW5t331wcPTt6atI8r23T
2Ma4Eg/PnhyfJnmVlemaXs/rdNEezLs6XRauOjhbp+VBvcjQ6KDb5Glrkyxt
z03T5onb1OemrbumPT48fHZ4nKS1Tc/NVdkmd8tzc/Zq9jq5ueMHti5te3CJ
zhPppqEGGDlJ0q5dVfV5YvjvQP81ND1q83pqnutkwg8y09cuu9n9rapp5K9L
Wy+35jpzoENjXtv2rqpvQiO7Tl1xbvwqf0OEukvr3JXLTZGWdkpz3T+b91Nz
saruytFU3rv16DlP47euycZjUtMpN/3N9/TrNM2m3c3+sX47NZddmaXjwX5L
u7vejn/jAd+n2WpbleZyS01d1owH/z7nl37TSrtcm02zap0kZVWv09bdWuwE
8cXx0dEz/Xh69OxEPz45fPLUf3x8fNY3OPIfn54dyV4miSsXo06x5foRzKgf
T06f4mmCdw4ODkw6b9o6zdokeb9yjSHm7Na2bI1yDl5h5jHztLG5oRVXG1vT
OFWZFsZ+pC+882aZupIaNA5fXNuYTTcvXMYtRSpaW5qtTevGpMtqSqxqNmnd
uqwr0preCEO2K2s2vWhVC/OhdH/srHlZZTTmLAjVA0jcQ8gWXsntIu2K1gud
aWxhMx59U9FEtqZN54WdmLuVy1YmJVGt3dLRKoot3uXZz7f9glfUpKjuaOI0
mczmPJl2lZamsMuU+rt6e3vqRyN+npr3NAtZhCHmhjTMq3aFdmfm26Ka0+Rp
JVnatPEivv2ARaRlLgCSrmyaY9E0scEQ1LaSlcbrMW1l5rYlqTdNR0SMdye3
m6La8naie8KXdGn5K2iKwYh0m7rKO6YTFhCzQFo0VdiU2v6xczW/zfPIqnLh
liTVc1e4dosed6aGQTdDjOxAKRMWtKirtUm5kftICyU2aV0jG5Ga0n5sD1bV
xtRVRwuccIe5XVd7uASdn7XV6RBzY76Ip8Z71ViT0XYu0VkVms3tKr111Jtb
E2luLZF1s6nqNlooyfCaSNChgxQjNR1z1IRgrjVl1ZrCrV1Ly2grmnTXVhDM
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
2J/zXAAA

-->

</rfc>

