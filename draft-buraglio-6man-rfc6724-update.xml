<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.33 (Ruby 2.6.10) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

<!ENTITY RFC2119 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY I-D.ietf-core-coap SYSTEM "https://bib.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-core-coap.xml">
]>


<rfc docName="draft-buraglio-6man-rfc6724-update" category="std" consensus="true">
  <front>
    <title>Updates to host address source selection</title>

    <author initials="T." surname="Chown" fullname="Tim Chown">
      <organization>JISC</organization>
      <address>
        <email>Tim.Chown@jisc.ac.uk</email>
      </address>
    </author>

    <date year="2023" month="May" day="03"/>

    
    
    

    <abstract>


<?line 36?>

<t>The behavior of ULA addressing as defined by <eref target="RFC6724"></eref> is preferred below legacy IPv4 addressing, thus rendering ULA IPv6 deployment functionally unusable in IPv4 / IPv6 dual-stacked environments. This behavior is counter to the operational behavior of GUA IPv6 addressing on nearly all modern operating systems that leverage a preference model based on <eref target="RFC6724"></eref>.
This document outlines buth the operational implications of section section 10.6 of <eref target="RFC6724"></eref> as described in <eref target="draft-ietf-v6ops-ula"></eref> and updates the process to better suit operational deployment and management of Unique Local Addressing (ULA) in production.</t>



    </abstract>



  </front>

  <middle>


<?line 41?>

<section anchor="introduction"><name>Introduction</name>

<t>In modern IPv4 / IPv6 dual-stacked environments, ULA addressing and GUA IPv6 addressing exhibit opposite behavior, which creates difficulties in deployments
leveraging ULA addressing. This conflicting behavior carries planning, operational, and security implications for environments requiring ULA addressing with IPv4/IPv6 dual-stack and prioritization of IPv6 traffic by default, as is the behavior with IPv6 GUA addressing.</t>

<t><vspace blankLines='999' /></t>

</section>
<section anchor="defining-well-known-unintended-operational-issues-with-ula"><name>Defining Well Known Unintended Operational Issues With ULA</name>

<t>The <eref target="RFC6724"></eref> definition is incomplete for ULA precedence if a host is operating in a dual-stack environment.
As written, <eref target="RFC6724"></eref> section 10.3 states:</t>

<figure><artwork><![CDATA[
"The default policy table gives IPv6 addresses higher precedence than
IPv4 addresses.  This means that applications will use IPv6 in
preference to IPv4 when the two are equally suitable.  An
administrator can change the policy table to prefer IPv4 addresses by
giving the ::ffff:0.0.0.0/96 prefix a higher precedence".
]]></artwork></figure>

<t>Expected behavior would be that ULA address space would be preferred over legacy IPv4, however this is not the case. This presents an acute issue with any environment that will use ULA addressing long side legacy IPv4 that is counter to the standard expectations for legacy IPv4 / IPv6 dual-stack behavior of preferring IPv6, as is performed with GUA addressing.
Further, <eref target="RFC6724"></eref> Section 10.6 states that this is resolvable by adding a site-specific policy to cause ULAs
within a site to be preferred over global addresses. While theoretically possible, this presents significant issues on devices with inaccessable configuration files as detailed below.</t>

<section anchor="operational-implications"><name>Operational Implications</name>

<t>There are demonstrated and easily repeatable uses cases of ULA not being preferred in some OS and network equipment over legacy IPv4 that necessitate the immediate update to <eref target="RFC6724"></eref>
to better reflect the original intent of the RFC. As with most adjustments to standards, and using <eref target="RFC6724"></eref>
itself as a measurement, this update will likely take between 8-20 years to become common enough for relatively consistent behavior within operating systems. As a reference, as of the time of this writing, it has been 10 years since <eref target="RFC6724"></eref>
has been published but we continue to see existing commercial and open source operating systems exhibiting <eref target="RFC3484"></eref>
behavior. While it should be noted that <eref target="RFC6724"></eref> defines a solution that is functional academically, operationally the solution of adjusting the address preference selection table
is both operating system dependent and unable to be signaled by any network mechanism such as within a router advertisement, DHCPv6 option, or the like. This lack of an
intra-protocol or network-based ability to adjust address selection preference, along with the inability to adjust a notable number of operating systems either programmatically or manually
renders operational scalability of such a mechanism functionally untenable.<br />
It is anticipated that any update of <eref target="RFC6724"></eref> would require an additional 8-20 years to be fully realized and properly implemented in a majority of network connected systems. In addition, in the current versions of Linux,
the priority table (gai.conf) still makes reference to <eref target="RFC3484"></eref>, further demonstrating the long timeframe to have updates reflected in a current, modern operating system. Examples of such out-of-date behavior can be found in printers, cameras, fixed devices, IoT sensors, and longer lifecycle equipment.
It is especially important to note this behavior in the long lifecycle equipment that exists in industrial control and operational technology environments due to their very long mean time to replacement.
The core issue is the stated interpretation from gai.conf that has the following default:</t>

<figure><artwork><![CDATA[
#scopev4  <mask> <value> 
#  Add another rule to the RFC 6724 scope table for IPv4 addresses. 
#    By default the scope IDs described in section 3.2 in RFC 6724 are
#    used.  Changing these defaults should hardly ever be necessary.
#    The defaults are equivalent to:
#
#scopev4 ::ffff:169.254.0.0/112  2
#scopev4 ::ffff:127.0.0.0/104    2
#scopev4 ::ffff:0.0.0.0/96       14
]]></artwork></figure>

<t title="gai.conf example" alt="gai.conf" anchor="scope4">Notice that they are interpreting the legacy IPv4 address range as "scopev4" and the prefix ::ffff:0.0.0.0/96 which has a higher precedence (35) in <eref target="RFC6724"></eref> then the ULA prefix of fc00::/7 (3). This results in legacy IPv4 being preferred over IPv6 ULA. While not inherently undesirable, the operational outcome when utilizing dual-stack with ULA is inconsistent and imparts unnecessary difficulty for both troubleshooting and creating the requisite baseline of expected behavior which are both requirements for supportable production deployments. This results in operational and engineering teams not gaining IPv6 experience as limited traffic is actually using IPv6, and security baseline expectations can, depending on the host implementation, be inconsistent at best and haphazard at worst.</t>

<t>In practice, <eref target="RFC6724"></eref> imposes several operational shortcomings preventing both consistent and desired behavior. If we define "desired behavior" as IPv6 preference over legacy IPv4 for address and protocol selection, then the resulting implemented behavior, based on <eref target="RFC6724"></eref>, will fall short of that intent. Based on the current verbiage, dual-stacked hosts configured with both a legacy IPv4 address and an IPv6 ULA address, the resulting behavior will manifest as a host choosing IPv4 over ULA IPv6. This behavior deviates from the current goal of a host with legacy IPv4 address and also with an IPv6 GUA address preferring IPv6 over IPv4. Operationally and strategically, this manifests as an impediment to deployment of IPv6 for many non service provider and mobile networks phasing in dual-stacked (both legacy IPv4 and IPv6) networking with the expectation of consistent behavior (i.e. always use IPv6 before legacy IPv4).</t>

<t>Other operational considerations are the use of the policy table detailed in section 2.1 of <eref target="RFC6724"></eref>. While conceptually the intent was for a configurable, longest-match table to be adjusted as-needed. In practice, modifying the prefix policy table remains difficult across platforms, and in some cases impossible. Embedded, proprietary, closed source, and IoT devices are especially difficult to adjust, and are in many cases incapable of any adjustment whatsoever. Large scale manipulation of the policy table also remains out of the realm of realistic support for small and medium scale operators due to lack of ability to manipulate all the hosts and systems, or a lack of tooling and access.</t>

<t>Below is an example of a gai.conf file from a modern Linux installation as of 03 April 2022:</t>

<figure><artwork><![CDATA[
# Configuration for getaddrinfo(3).
#
# So far only configuration for the destination address sorting is needed.
# RFC 3484 governs the sorting.  But the RFC also says that system
# administrators should be able to overwrite the defaults.  This can be
# achieved here.
#
# All lines have an initial identifier specifying the option followed by
# up to two values.  Information specified in this file replaces the
# default information.  Complete absence of data of one kind causes the
# appropriate default information to be used.  The supported commands include:
#
# reload  <yes|no>
#    If set to yes, each getaddrinfo(3) call will check whether this file
#    changed and if necessary reload.  This option should not really be
#    used.  There are possible runtime problems.  The default is no.
#
# label   <mask>   <value>
#    Add another rule to the RFC 3484 label table.  See section 2.1 in
#    RFC 3484.  The default is:
#
#label ::1/128       0
#label ::/0          1
#label 2002::/16     2
#label ::/96         3
#label ::ffff:0:0/96 4
#label fec0::/10     5
#label fc00::/7      6
#label 2001:0::/32   7
#
#    This default differs from the tables given in RFC 3484 by handling
#    (now obsolete) site-local IPv6 addresses and Unique Local Addresses.
#    The reason for this difference is that these addresses are never
#    NATed while IPv4 site-local addresses most probably are.  Given
#    the precedence of IPv6 over IPv4 (see below) on machines having only
#    site-local IPv4 and IPv6 addresses a lookup for a global address would
#    see the IPv6 be preferred.  The result is a long delay because the
#    site-local IPv6 addresses cannot be used while the IPv4 address is
#    (at least for the foreseeable future) NATed.  We also treat Teredo
#    tunnels special.
#
# precedence  <mask>   <value>
#    Add another rule to the RFC 3484 precedence table.  See section 2.1
#    and 10.3 in RFC 3484.  The default is:
#
#precedence  ::1/128       50
#precedence  ::/0          40
#precedence  2002::/16     30
#precedence ::/96          20
#precedence ::ffff:0:0/96  10
#
#    For sites which prefer IPv4 connections change the last line to
#
#precedence ::ffff:0:0/96  100

#
# scopev4  <mask>  <value>
#    Add another rule to the RFC 6724 scope table for IPv4 addresses.
#    By default the scope IDs described in section 3.2 in RFC 6724 are
#    used.  Changing these defaults should hardly ever be necessary.
#    The defaults are equivalent to:
#
#scopev4 ::ffff:169.254.0.0/112  2
#scopev4 ::ffff:127.0.0.0/104    2
#scopev4 ::ffff:0.0.0.0/96       14
]]></artwork></figure>

<t>Several assumptions are made here and are largely based on interpretations of <eref target="RFC6724"></eref>
but are not operationally relevant in modern networks. As this file or an equivalent structure within a given operating system is referenced, it dictates the
behavior of the getaddrinfo() or analogous process. More specifically, where getaddrinfo() or comparable API is used, the sorting behavior should take into account both
the source address of the requesting host as well as the destination addresses returned and sort according to both source and destination addressing, i.e, when a ULA address is
returned, the source address selection should return and use a ULA address if available. Similarly, if a GUA address is returned the source address selection should return
a GUA source address if available.</t>

<t>Here are some example failure modes:</t>

<t><list style="symbols">
  <t>ULA per <eref target="RFC6724"></eref> is less preferred (the Precedence value is lower) than all legacy IPv4 (represented by ::ffff:0:0/96 in the aforementioned table).</t>
  <t>Because of the lower Precedence value of fc00::/7, if a host has legacy IPv4 enabled, it will use legacy IPv4 before using ULA.</t>
  <t>A dual-stacked client will source the traffic from the legacy IPv4 address, meaning it will require a corresponding legacy IPv4 destination address.</t>
</list></t>

<t>Per number 3, even a host choosing a destination with A and AAAA DNS records, the host in question will choose the A record to get an legacy IPv4 address for the destination, meaning ULA IPv6 is rendered completely unused. It is also notable that Happy Eyeballs <eref target="RFC8305"></eref> will not change the source address selection process on a host. Happy Eyeballs will only modify the destination sorting process.</t>

<t>As a direct result of the described failure modes, and in addition to the aforementioned operational implications, use of ULA is not a viable option for dual-stack networking transition planning, large scale network modeling, network lab environments or other modes of emulating a large scale networking that runs both IPv4 and IPv6 concurrently with the expectation that IPv6 will be preferred by default.</t>

</section>
</section>
<section anchor="adjustments-to-rfc6724"><name>Adjustments to RFC6724</name>

<t>Rule 2.1 of <eref target="RFC6724"></eref> states:</t>

<figure><artwork><![CDATA[
IPv6 implementations SHOULD support configurable address selection
via a mechanism at least as powerful as the policy tables defined
here.  It is important that implementations provide a way to change
the default policies as more experience is gained.  Sections 10.3
through 10.7 provide examples of the kind of changes that might be
needed.
]]></artwork></figure>

<t>This document updates <eref target="RFC6724"></eref> section 2.1 to the following:</t>

<figure><artwork><![CDATA[
IPv6 implementations MUST support configurable address selection
via a mechanism at least as powerful as the policy tables defined
here.  It is important that implementations provide a way to change
the default policies to ensure operational supportability and flexibility in deployment.
Sections 10.3 through 10.7 provide examples of the kind of changes that might be
needed.
]]></artwork></figure>

<t>Rule 5.5 of <eref target="RFC6724"></eref> states:</t>

<figure><artwork><![CDATA[
Rule 5.5: Prefer addresses in a prefix advertised by the next-hop.
If SA or SA's prefix is assigned by the selected next-hop that will
be used to send to D and SB or SB's prefix is assigned by a different
next-hop, then prefer SA.  Similarly, if SB or SB's prefix is
assigned by the next-hop that will be used to send to D and SA or
SA's prefix is assigned by a different next-hop, then prefer SB.
Discussion: An IPv6 implementation is not required to remember
which next-hops advertised which prefixes.  The conceptual models
of IPv6 hosts in Section 5 of [](RFC4861) and Section 3 of [](RFC4191)
have no such requirement.  Hence, Rule 5.5 is only applicable to
implementations that track this information.
]]></artwork></figure>

<t>This document updates <eref target="RFC6724"></eref> section 5.5 to the following:</t>

<section anchor="needs-eyes"><name>needs eyes</name>

<figure><artwork><![CDATA[
Rule 5.5: Hosts MUST prefer addresses in a prefix advertised by the next-hop.
If SA or SA's prefix is assigned by the selected next-hop that will
be used to send to D and SB or SB's prefix is assigned by a different
next-hop, then prefer SA.  Similarly, if SB or SB's prefix is
assigned by the next-hop that will be used to send to D and SA or
SA's prefix is assigned by a different next-hop, then prefer SB.
Discussion: An IPv6 implementation is not required to remember
which next-hops advertised which prefixes.  The conceptual models
of IPv6 hosts in Section 5 of [](RFC4861) and Section 3 of [](RFC4191)
have no such requirement.  Hence, Rule 5.5 is only applicable to
implementations that track this information.
]]></artwork></figure>

<t>Rule 10.3 of <eref target="RFC6724"></eref> states:</t>

<figure><artwork><![CDATA[
The default policy table gives IPv6 addresses higher precedence than
   IPv4 addresses.  This means that applications will use IPv6 in
   preference to IPv4 when the two are equally suitable.  An
   administrator can change the policy table to prefer IPv4 addresses by
   giving the ::ffff:0.0.0.0/96 prefix a higher precedence:

      Prefix        Precedence Label
      ::1/128               50     0
      ::/0                  40     1
      ::ffff:0:0/96        100     4
      2002::/16             30     2
      2001::/32              5     5
      fc00::/7               3    13
      ::/96                  1     3
      fec0::/10              1    11
      3ffe::/16              1    12

   This change to the default policy table produces the following
   behavior:

   Candidate Source Addresses: 2001:db8::2 or fe80::1 or 169.254.13.78
   Destination Address List: 2001:db8::1 or 198.51.100.121
   Unchanged Result: 2001:db8::1 (src 2001:db8::2) then 198.51.100.121
   (src 169.254.13.78) (prefer matching scope)

   Candidate Source Addresses: fe80::1 or 198.51.100.117
   Destination Address List: 2001:db8::1 or 198.51.100.121
   Unchanged Result: 198.51.100.121 (src 198.51.100.117) then
   2001:db8::1 (src fe80::1) (prefer matching scope)

   Candidate Source Addresses: 2001:db8::2 or fe80::1 or 10.1.2.4
   Destination Address List: 2001:db8::1 or 10.1.2.3
   New Result: 10.1.2.3 (src 10.1.2.4) then 2001:db8::1 (src
   2001:db8::2) (prefer higher precedence)
]]></artwork></figure>

<t>This document updates <eref target="RFC6724"></eref> section 10.3 to the following:</t>

</section>
</section>
<section anchor="smoldering-ideas"><name>Smoldering ideas</name>

<t>fixes without a global precedence for ULAs:
set PIO with L=0 and A=0 (exactly as recommended in RFC 8028, but for other reasons). If a host sees such a PIO for a ULA prefix, it could serve as a signal that the prefix is to be given a suitable precedence, even though it is not on-link and not used for SLAAC.</t>

<t>Insert the /48 for any directly connected /64, utilize some RIO/PIO L=0/A=0 extension that adds additional non-direct /48.</t>

</section>
<section anchor="refstyle"><name>References</name>

<t>The IETF documents referred to here are <eref target="RFC2119"></eref> and <eref target="I-D.ietf-core-coap"></eref>.  We also refer to <eref target="REST">REST</eref>.  <eref target="a-rose"></eref> and <eref target="exampleTable"></eref> are explicitly tagged, as is <eref target="refstyle"></eref>, but <eref target="security-considerations"></eref> is implicit.  The web page at <eref target="http://ipv.sx/">ipv.sx</eref> is not part of this document.</t>

</section>
<section anchor="security-considerations"><name>Security Considerations</name>

<t>None.</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<t>None.</t>

</section>


  </middle>

  <back>


    <references title='Normative References'>

&RFC2119;
&I-D.ietf-core-coap;


    </references>

    <references title='Informative References'>

<reference anchor="REST" >
  <front>
    
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>


    </references>



  </back>

<!-- ##markdown-source:
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
4vbm/c2XPuX/RWCJFi75L+UrNHHuRAAA

-->

</rfc>

